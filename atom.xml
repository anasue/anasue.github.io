<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>随心</title>
  <subtitle>随遇而安</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://sxsue.com/"/>
  <updated>2016-10-22T12:47:15.000Z</updated>
  <id>http://sxsue.com/</id>
  
  <author>
    <name>Anasue</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>做运营到底是做什么</title>
    <link href="http://sxsue.com/2016/10/22/%E5%81%9A%E8%BF%90%E8%90%A5%E5%88%B0%E5%BA%95%E6%98%AF%E5%81%9A%E4%BB%80%E4%B9%88/"/>
    <id>http://sxsue.com/2016/10/22/做运营到底是做什么/</id>
    <published>2016-10-22T11:25:03.000Z</published>
    <updated>2016-10-22T12:47:15.000Z</updated>
    
    <content type="html"><![CDATA[<p>拉新——促活流程——营收</p>
<p>拉新常见方法：<br>活动营销：<br>新媒体运营：<br>发帖推广：<br>人工邀请：<br>线下地推：<br>付费广告：<br>口碑传播：<br>用户转介绍：<br>SEO/ASO：<br>寻找平台推荐：<br>互推、换量：<br>打造品牌：</p>
<p>促活和留存常用方法：<br>找出留存问题：<br>适时地提醒用户：<br>精细化运营：<br>用户成长激励体系：成长激励体系，包括了用户积分、等级、勋章、排行榜、积分兑换系统等<br>优质内容运营：<br>增加社交关系沉淀：<br>用高频功能带低频功能：<br>签到打卡：<br>让用户付出成本:<br>KOL运营关怀<br>给用户更方面的入口：<br>召回流失用户:</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;拉新——促活流程——营收&lt;/p&gt;
&lt;p&gt;拉新常见方法：&lt;br&gt;活动营销：&lt;br&gt;新媒体运营：&lt;br&gt;发帖推广：&lt;br&gt;人工邀请：&lt;br&gt;线下地推：&lt;br&gt;付费广告：&lt;br&gt;口碑传播：&lt;br&gt;用户转介绍：&lt;br&gt;SEO/ASO：&lt;br&gt;寻找平台推荐：&lt;br&gt;互推、换量：&lt;br
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>产品经理的未来</title>
    <link href="http://sxsue.com/2016/10/17/%E4%BA%A7%E5%93%81%E7%BB%8F%E7%90%86%E7%9A%84%E6%9C%AA%E6%9D%A5/"/>
    <id>http://sxsue.com/2016/10/17/产品经理的未来/</id>
    <published>2016-10-17T07:37:26.000Z</published>
    <updated>2016-10-23T03:59:43.000Z</updated>
    
    <content type="html"><![CDATA[<p>一、产品经理的下一个方向是什么？</p>
<p>最近两年我们发现一个特殊的新兴职业，叫增长（growth）负责人；而实际上，负责增长的人往往就是负责产品的人。那么，产品经理和增长负责人到底有什么区别呢？</p>
<p>（一）视野范围的转变<br>我以前接触到的产品经理，首先是要做用研、理需求，写PRD、画原型，最后还要做好项目、推进工程实施。而负责增长的人往往有一个更加广阔的视野，不仅要考虑产品本身，还要考虑产品和用户的整个生命周期。</p>
<p>（二）工作能力的升级<br>相比于产品经理的用研、原型、项目等能力，增长负责人需要一个更加复合的能力：一是市场营销或者运营的能力，二是产品开发的能力，三是数据分析的能力。</p>
<p>（三）薪资待遇的提升<br>这几年产品经理的薪资区间在不断波动，总体有上升但是幅度不大；但是增长负责人的薪水上升的速度非常快！根据美国几家核心招聘网站的近期行情，增长负责人薪资远远高于产品经理。<br>在产品精细化运营的今天，从传统的产品经理升级为增长负责人，我们大有机遇！</p>
<p>二、如何培养用户增长的思维？</p>
<p>既然增长那么重要，那么产品经理该如何去做增长呢？正如上面讲到的，做增长需要有一个更加广阔的视野，就产品论产品是不行的！</p>
<p>（一）像增长黑客一样思考<br>风靡硅谷的增长黑客（Growth Hacker）理论提出著名的海盗法则–––AARRR，从用户获取、激活、用户留存、变现和传播五个角度介绍了全新的增长框架：<br>因此，产品经理应该从用户生命周期与企业业务全流程来思考产品，找到产品的每一个增长点。这套增长体系获得了Facebook、LinkedIn、Airbnb等硅谷巨头们的重用，建议所有的产品经理都好好学习，并从宏观角度来看待产品。</p>
<p>（二）在协作中实践MVP<br>AARRR的实施需要跨部门协作，产品经理需要和市场运营、工程技术和数据分析等团队有着良好的配合。</p>
<p>全球最大的职场社交平台 ––– LinkedIn ， 内部有两大组织，分别是增长（growth）团队和变现（monetization）团队。增长团队负责用户增长，由产品负责人带队，整个团队由产品、工程、数据分析、市场和设计等部门支持。通过这种组织架构，LinkedIn管理层实现了对各条业务线的管理，也加快了产品和用户的增长速度。<br>这也和MVP（最简可行性产品）概念不谋而合，从最初的产品需求提出，到产品落地上线，再到后期的用户行为数据分析。产品经理需要借助数据来验证我们的假设或者需求，并且不断迭代或者修正，从而实现产品和用户增长的目的。</p>
<p>三、从0到1做产品增长<br>无论是直觉判断，还是数据驱动：我认为这两者都不可或缺！产品的早期需要更多直觉判断，后期则需要精细化的分析。这就像“治大国如烹小鲜”，产品经理需要根据数据进行产品迭代、一步步促进增长！</p>
<p>（一）用户是谁</p>
<p>不同类型的用户，其价值需求和用户行为规律有很大的差异，这些因素直接影响到产品规划和工程实施。所以产品经理首先要搞清楚：你的用户是谁，他们从哪里来？<br>以一个 To B（面向企业客户）的产品为例，用户自身属性（行业、职位、地区、访问来源等）决定了用户的价值需求，而用户的设备属性（操作系统、浏览器、设备型号、屏幕大小等）直接影响其操作体验。一个不清楚用户是谁的产品经理很难说是合格的，只有通过数据分析知己知彼才能做出优秀的产品。</p>
<p>（二）用户的体验如何</p>
<p>市场竞争越来越激烈，产品的用户体验也被提到了前所未有的高度，重点路径的转化效率、用户行为的细节轨迹，这些数据都是衡量产品用户体验的重要指标，产品经理需要格外重视。</p>
<p>（三）用户的使用偏好<br>在产品分析的过程中，产品经理需要对产品的视觉、交互、内容、功能等拆分，分层次用数据分析用户的使用偏好。在这个过程中，产品经理应该熟练使用图表或者相应数据可视化工具来辅助自己。</p>
<p>（四）如何让用户心甘情愿留下来<br>打造一款优秀的产品是所有产品经理的梦想。优秀产品的核心是满足用户的需求、为用户提供价值；而重要的衡量指标就是用户留存度。</p>
<p><script type="text/javascript" id="wumiiRelatedItems">&lt;/script</p>
</script></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一、产品经理的下一个方向是什么？&lt;/p&gt;
&lt;p&gt;最近两年我们发现一个特殊的新兴职业，叫增长（growth）负责人；而实际上，负责增长的人往往就是负责产品的人。那么，产品经理和增长负责人到底有什么区别呢？&lt;/p&gt;
&lt;p&gt;（一）视野范围的转变&lt;br&gt;我以前接触到的产品经理，首先
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Mac启动Mysql错误</title>
    <link href="http://sxsue.com/2016/09/01/Mac%E5%90%AF%E5%8A%A8Mysql%E9%94%99%E8%AF%AF/"/>
    <id>http://sxsue.com/2016/09/01/Mac启动Mysql错误/</id>
    <published>2016-09-01T08:56:28.000Z</published>
    <updated>2016-10-22T11:53:36.000Z</updated>
    
    <content type="html"><![CDATA[<p>①　Check if mysql is properly installed and also set up.</p>
<figure class="highlight armasm"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">brew </span><span class="meta">info</span> mysql</div></pre></td></tr></table></figure>
<p>If it’s not installed then google for how to install ‘mysql through homebrew’. If it is installed do not forget to set up your mysql by doing what homebrew tells you:</p>
<figure class="highlight vbnet"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">We<span class="comment">'ve installed your MySQL database without a root password. To secure it run:</span></div><div class="line">    mysql_secure_installation</div><div class="line"></div><div class="line"><span class="keyword">To</span> connect run:</div><div class="line">    mysql -uroot</div><div class="line"></div><div class="line"><span class="keyword">To</span> have launchd start mysql now <span class="keyword">and</span> restart at login:</div><div class="line">  brew services start mysql</div><div class="line"><span class="keyword">Or</span>, <span class="keyword">if</span> you don<span class="comment">'t want/need a background service you can just run:</span></div><div class="line">  mysql.server start</div></pre></td></tr></table></figure>
<p>In your terminal do everything above. If you got errors, first check if your mysql server is running:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql<span class="selector-class">.server</span> start</div></pre></td></tr></table></figure></p>
<p>Then try mysql_secure_installation and/or mysql -uroot to try and get in.</p>
<figure class="highlight subunit"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">ERROR </span>2002 (HY000): Can't connect to local MySQL server through socket '/tmp/mysql.sock' (2)</div></pre></td></tr></table></figure>
<p>In case of this error try: <code>mysql -uroot -h 127.0.0.1</code> I don’t know why but it selects the wrong host by default.</p>
<p>If this still doesn’t work maybe you already set a password, in that case you need to add -p to the command: <code>mysql -uroot -h 127.0.0.1 -p</code></p>
<p>If even this fails maybe it’s a permission problem. Try:</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo chown -R <span class="string">_mysql:</span>mysql <span class="regexp">/usr/</span>local<span class="regexp">/var/</span>mysql</div><div class="line">sudo mysql.server start</div></pre></td></tr></table></figure>
<p>If you got in properly: That’s great! Let’s create our first Database.</p>
<p>②　Creating the database you’ll work with.</p>
<p>So if you didn’t use Laravel Homestead you’ll have to create your database first. Once you got into your mysql through the commands above it should say: mysql&gt; in the terminal now.</p>
<p>Then just write: <code>CREATE DATABASE my_db</code>; where you can write any name instead of my_db. That’s it!</p>
<p>③　Setting up your Laravel settings.</p>
<p>In your Laravel project folder there will be a .env file. Open that and look inside, and search for the following part:</p>
<figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="attr">DB_CONNECTION</span>=mysql</div><div class="line"><span class="attr">DB_HOST</span>=<span class="number">127.0</span>.<span class="number">0.1</span></div><div class="line"><span class="attr">DB_PORT</span>=<span class="number">3306</span></div><div class="line"><span class="attr">DB_DATABASE</span>=homestead</div><div class="line"><span class="attr">DB_USERNAME</span>=homestead</div><div class="line"><span class="attr">DB_PASSWORD</span>=secret</div></pre></td></tr></table></figure>
<p>Even though I didn’t install Laravel through homestead, it has all the ‘homestead’ settings… Here’s what you need to change:</p>
<ul>
<li>Check if the DB_HOST is set to <code>127.0.0.1</code></li>
<li>Set the <code>DB_DATABASE</code> to the one you created. In this case <code>my_db</code></li>
<li>Set a preferred <code>DB_USERNAME</code> or try root.</li>
<li>Set the <code>DB_PASSWORD</code> to the password for MySQL you choose at the very beginning, when you set up your mysql through homebrew.</li>
</ul>
<p>④　DONE</p>
<p>You’re done. Try opening the terminal again, go to your Laravel project folder and <code>php artisan migrate</code>.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;①　Check if mysql is properly installed and also set up.&lt;/p&gt;
&lt;figure class=&quot;highlight armasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div clas
    
    </summary>
    
    
  </entry>
  
</feed>
